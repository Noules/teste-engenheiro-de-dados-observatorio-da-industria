[2024-07-09T17:53:11.789+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: pesquisa_industrial_anual_empresas.workspace manual__2024-07-09T17:53:10.447911+00:00 [queued]>
[2024-07-09T17:53:11.796+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: pesquisa_industrial_anual_empresas.workspace manual__2024-07-09T17:53:10.447911+00:00 [queued]>
[2024-07-09T17:53:11.797+0000] {taskinstance.py:2193} INFO - Starting attempt 1 of 1
[2024-07-09T17:53:11.810+0000] {taskinstance.py:2217} INFO - Executing <Task(PapermillOperator): workspace> on 2024-07-09 17:53:10.447911+00:00
[2024-07-09T17:53:11.815+0000] {standard_task_runner.py:60} INFO - Started process 5044 to run task
[2024-07-09T17:53:11.818+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'pesquisa_industrial_anual_empresas', 'workspace', 'manual__2024-07-09T17:53:10.447911+00:00', '--job-id', '22', '--raw', '--subdir', 'DAGS_FOLDER/pesquisa_industrial_anual_empresas/dags.py', '--cfg-path', '/tmp/tmp4etrfnbf']
[2024-07-09T17:53:11.821+0000] {standard_task_runner.py:88} INFO - Job 22: Subtask workspace
[2024-07-09T17:53:11.877+0000] {task_command.py:423} INFO - Running <TaskInstance: pesquisa_industrial_anual_empresas.workspace manual__2024-07-09T17:53:10.447911+00:00 [running]> on host 049690d4da25
[2024-07-09T17:53:11.977+0000] {taskinstance.py:2513} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='observatorio@sistemafiea.com.br' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='pesquisa_industrial_anual_empresas' AIRFLOW_CTX_TASK_ID='workspace' AIRFLOW_CTX_EXECUTION_DATE='2024-07-09T17:53:10.447911+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-07-09T17:53:10.447911+00:00'
[2024-07-09T17:53:11.980+0000] {execute.py:83} INFO - Input Notebook:  /opt/***/dags/pesquisa_industrial_anual_empresas/notebooks/workspace.ipynb
[2024-07-09T17:53:11.981+0000] {execute.py:84} INFO - Output Notebook: /opt/***/dags/resultado/pesquisa_industrial_anual_empresas_workspace_2024-07-09.ipynb
[2024-07-09T17:53:13.470+0000] {clientwrap.py:44} INFO - Executing notebook with kernel: python3
[2024-07-09T17:53:23.760+0000] {taskinstance.py:2731} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.11/site-packages/airflow/models/taskinstance.py", line 444, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.11/site-packages/airflow/models/taskinstance.py", line 414, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.11/site-packages/airflow/providers/papermill/operators/papermill.py", line 118, in execute
    pm.execute_notebook(
  File "/home/airflow/.local/lib/python3.11/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
  File "/home/airflow/.local/lib/python3.11/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [4]":
---------------------------------------------------------------------------
AnalysisException                         Traceback (most recent call last)
Cell In[4], line 41
     38 df = spark.read.json(rdd, schema=schema)
     40 # Exploda as estruturas aninhadas
---> 41 df_exploded = df.withColumn("resultados", explode(col("resultados"))) \
     42                 .withColumn("classificacoes", explode(col("resultados.classificacoes"))) \
     43                 .withColumn("series", explode(col("resultados.series"))) \
     44                 .select(
     45                     "id", "variavel", "unidade",
     46                     col("classificacoes.id").alias("classificacao_id"),
     47                     col("classificacoes.nome").alias("classificacao_nome"),
     48                     col("classificacoes.categoria").alias("classificacao_categoria"),
     49                     col("series.localidade.id").alias("localidade_id"),
     50                     col("series.localidade.nivel.id").alias("nivel_id"),
     51                     col("series.localidade.nivel.nome").alias("nivel_nome"),
     52                     col("series.localidade.nome").alias("localidade_nome"),
     53                     col("series.serie").alias("serie")
     54                 )
     56 # Mostre o DataFrame
     57 df_exploded.show(truncate=False)

File ~/.local/lib/python3.11/site-packages/pyspark/sql/dataframe.py:5174, in DataFrame.withColumn(self, colName, col)
   5169 if not isinstance(col, Column):
   5170     raise PySparkTypeError(
   5171         error_class="NOT_COLUMN",
   5172         message_parameters={"arg_name": "col", "arg_type": type(col).__name__},
   5173     )
-> 5174 return DataFrame(self._jdf.withColumn(colName, col._jc), self.sparkSession)

File ~/.local/lib/python3.11/site-packages/py4j/java_gateway.py:1322, in JavaMember.__call__(self, *args)
   1316 command = proto.CALL_COMMAND_NAME +\
   1317     self.command_header +\
   1318     args_command +\
   1319     proto.END_COMMAND_PART
   1321 answer = self.gateway_client.send_command(command)
-> 1322 return_value = get_return_value(
   1323     answer, self.gateway_client, self.target_id, self.name)
   1325 for temp_arg in temp_args:
   1326     if hasattr(temp_arg, "_detach"):

File ~/.local/lib/python3.11/site-packages/pyspark/errors/exceptions/captured.py:185, in capture_sql_exception.<locals>.deco(*a, **kw)
    181 converted = convert_exception(e.java_exception)
    182 if not isinstance(converted, UnknownException):
    183     # Hide where the exception came from that shows a non-Pythonic
    184     # JVM exception message.
--> 185     raise converted from None
    186 else:
    187     raise

AnalysisException: [DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE] Cannot resolve "explode(resultados)" due to data type mismatch: Parameter 1 requires the ("ARRAY" or "MAP") type, however "resultados" has the type "STRUCT<classificacoes: STRUCT<id: STRING, nome: STRING, categoria: MAP<STRING, STRING>>, series: STRUCT<localidade: STRUCT<id: STRING, nivel: STRUCT<id: STRING, nome: STRING>, nome: STRING>, serie: MAP<STRING, STRING>>>".;
'Project [id#6, variavel#7, unidade#8, explode(resultados#9) AS resultados#14]
+- LogicalRDD [id#6, variavel#7, unidade#8, resultados#9], false


[2024-07-09T17:53:23.774+0000] {taskinstance.py:1149} INFO - Marking task as FAILED. dag_id=pesquisa_industrial_anual_empresas, task_id=workspace, execution_date=20240709T175310, start_date=20240709T175311, end_date=20240709T175323
[2024-07-09T17:53:23.792+0000] {standard_task_runner.py:107} ERROR - Failed to execute job 22 for task workspace (
---------------------------------------------------------------------------
Exception encountered at "In [4]":
---------------------------------------------------------------------------
AnalysisException                         Traceback (most recent call last)
Cell In[4], line 41
     38 df = spark.read.json(rdd, schema=schema)
     40 # Exploda as estruturas aninhadas
---> 41 df_exploded = df.withColumn("resultados", explode(col("resultados"))) \
     42                 .withColumn("classificacoes", explode(col("resultados.classificacoes"))) \
     43                 .withColumn("series", explode(col("resultados.series"))) \
     44                 .select(
     45                     "id", "variavel", "unidade",
     46                     col("classificacoes.id").alias("classificacao_id"),
     47                     col("classificacoes.nome").alias("classificacao_nome"),
     48                     col("classificacoes.categoria").alias("classificacao_categoria"),
     49                     col("series.localidade.id").alias("localidade_id"),
     50                     col("series.localidade.nivel.id").alias("nivel_id"),
     51                     col("series.localidade.nivel.nome").alias("nivel_nome"),
     52                     col("series.localidade.nome").alias("localidade_nome"),
     53                     col("series.serie").alias("serie")
     54                 )
     56 # Mostre o DataFrame
     57 df_exploded.show(truncate=False)

File ~/.local/lib/python3.11/site-packages/pyspark/sql/dataframe.py:5174, in DataFrame.withColumn(self, colName, col)
   5169 if not isinstance(col, Column):
   5170     raise PySparkTypeError(
   5171         error_class="NOT_COLUMN",
   5172         message_parameters={"arg_name": "col", "arg_type": type(col).__name__},
   5173     )
-> 5174 return DataFrame(self._jdf.withColumn(colName, col._jc), self.sparkSession)

File ~/.local/lib/python3.11/site-packages/py4j/java_gateway.py:1322, in JavaMember.__call__(self, *args)
   1316 command = proto.CALL_COMMAND_NAME +\
   1317     self.command_header +\
   1318     args_command +\
   1319     proto.END_COMMAND_PART
   1321 answer = self.gateway_client.send_command(command)
-> 1322 return_value = get_return_value(
   1323     answer, self.gateway_client, self.target_id, self.name)
   1325 for temp_arg in temp_args:
   1326     if hasattr(temp_arg, "_detach"):

File ~/.local/lib/python3.11/site-packages/pyspark/errors/exceptions/captured.py:185, in capture_sql_exception.<locals>.deco(*a, **kw)
    181 converted = convert_exception(e.java_exception)
    182 if not isinstance(converted, UnknownException):
    183     # Hide where the exception came from that shows a non-Pythonic
    184     # JVM exception message.
--> 185     raise converted from None
    186 else:
    187     raise

AnalysisException: [DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE] Cannot resolve "explode(resultados)" due to data type mismatch: Parameter 1 requires the ("ARRAY" or "MAP") type, however "resultados" has the type "STRUCT<classificacoes: STRUCT<id: STRING, nome: STRING, categoria: MAP<STRING, STRING>>, series: STRUCT<localidade: STRUCT<id: STRING, nivel: STRUCT<id: STRING, nome: STRING>, nome: STRING>, serie: MAP<STRING, STRING>>>".;
'Project [id#6, variavel#7, unidade#8, explode(resultados#9) AS resultados#14]
+- LogicalRDD [id#6, variavel#7, unidade#8, resultados#9], false

; 5044)
[2024-07-09T17:53:23.841+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 1
[2024-07-09T17:53:23.865+0000] {taskinstance.py:3312} INFO - 0 downstream tasks scheduled from follow-on schedule check
